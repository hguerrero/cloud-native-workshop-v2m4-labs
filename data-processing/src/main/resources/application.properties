# Configuration file
KAFKA_HOSTNAME=events-kafka-bootstrap-user1-cloudnativeapps.apps.cluster-ccn-0fe2.ccn-0fe2.open.redhat.com:443

# Incoming orders topic messages
mp.messaging.incoming.orders.connector=smallrye-kafka
mp.messaging.incoming.orders.bootstrap.servers=${KAFKA_HOSTNAME}
mp.messaging.incoming.orders.topic=orders-summary
mp.messaging.incoming.orders.group.id=orders-summary
mp.messaging.incoming.orders.auto.offset.reset=earliest
mp.messaging.incoming.orders.key.deserializer=org.apache.kafka.common.serialization.LongDeserializer
mp.messaging.incoming.orders.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

mp.messaging.incoming.orders.security.protocol=SSL
mp.messaging.incoming.orders.ssl.truststore.location=/Users/hguerrer/git/ccn-roadshow/cloud-native-workshop-v2m4-labs/data-processing/src/main/resources/keystore.jks
mp.messaging.incoming.orders.ssl.truststore.password=password

mp.messaging.incoming.fraud.connector=smallrye-kafka
mp.messaging.incoming.fraud.bootstrap.servers=${KAFKA_HOSTNAME}
mp.messaging.incoming.fraud.topic=potential-fraud
mp.messaging.incoming.fraud.group.id=potential-fraud
mp.messaging.incoming.fraud.auto.offset.reset=earliest
mp.messaging.incoming.fraud.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.fraud.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

mp.messaging.incoming.fraud.security.protocol=SSL
mp.messaging.incoming.fraud.ssl.truststore.location=/Users/hguerrer/git/ccn-roadshow/cloud-native-workshop-v2m4-labs/data-processing/src/main/resources/keystore.jks
mp.messaging.incoming.fraud.ssl.truststore.password=password

quarkus.kafka-streams.bootstrap-servers=${KAFKA_HOSTNAME}
quarkus.kafka-streams.application-id=data-processor
quarkus.kafka-streams.topics=dbserver1.order.order

# pass-through options
kafka-streams.cache.max.bytes.buffering=10240
kafka-streams.commit.interval.ms=1000
kafka-streams.metadata.max.age.ms=500
kafka-streams.auto.offset.reset=earliest
kafka-streams.metrics.recording.level=DEBUG
# kafka-streams.consumer.session.timeout.ms=250
# kafka-streams.consumer.heartbeat.interval.ms=200

kafka-streams.security.protocol=SSL
# kafka-streams.ssl.keystore.location=/Users/hguerrer/git/amq-examples/kafka-streams-quarkus-rideshare/src/main/resources/keystore.jks
# kafka-streams.ssl.keystore.password=password
kafka-streams.ssl.truststore.location=/Users/hguerrer/git/ccn-roadshow/cloud-native-workshop-v2m4-labs/data-processing/src/main/resources/keystore.jks
kafka-streams.ssl.truststore.password=password